version: 2

workflows:
  version: 2
  test_and_release:
    jobs:
      - test_and_make:
          filters:
            branches:
              ignore:
                - cmp-rc
                - cmp-demo
                - cmp-prod

      - compute_tag:
          filters:
            branches:
              only:
                - master
                - cmp-rc
                - cmp-demo
                - cmp-prod

      - build_container:
          filters:
            branches:
              only:
                - master
          requires:
            - compute_tag
            - test_and_make

      - release_cmp-rc:
          filters:
            branches:
              only:
                - cmp-rc
          requires:
            - compute_tag
      - release_cmp-demo:
          filters:
            branches:
              only:
                - cmp-demo
          requires:
            - compute_tag
      - release_cmp-prod:
          filters:
            branches:
              only:
                - cmp-prod
          requires:
            - compute_tag
      - create_release_tag:
          requires:
            - release_cmp-rc
            - release_cmp-demo
            - release_cmp-prod

deploy_image: &deploy_image
  docker:
    - image: reposibot/deployer:latest
  steps:
    - attach_workspace:
        at: .
    - run:
        name: release
        command: |
          TAG="$(cat tag.txt)"
          curl -sSO -u "${DEPLOYER_USERNAME}":"${DEPLOYER_PASSWORD}" \
            "https://deployer.repositive.io/scripts/deploy.sh"
          sh deploy.sh "$CIRCLE_PROJECT_REPONAME:$TAG" $CLUSTER $CONFIG_PATH $CIRCLE_BRANCH

jobs:
  test_and_make:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: node-deps-v1-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          key: node-deps-v1-{{ checksum "package-lock.json" }}
          paths:
            - $HOME/.npm
      - run: npm run compile
      - run: npm run lint
      - run: npm run test
      - run:
          name: Prune node_modules
          command: npm prune --production
      - store_artifacts:
          path: ./coverage
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - node_modules

  build_container:
    machine: true
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Push image to registry
          command: |
            REPO="${CIRCLE_PROJECT_REPONAME}"
            TAG="$(cat tag.txt)"

            # Login to to Vault with GH token
            PAYLOAD="{ \"token\": \"${GITHUB_TOKEN}\" }"
            TOKEN=$(curl -s --request POST --data "${PAYLOAD}" https://v8sh48s.repositive.io:8200/v1/auth/github/login --insecure | jq .auth.client_token | tr -d '"')

            # Request Credentials for GCR
            DOCKERAUTH=$(curl -k -s --header "X-Vault-Token: $TOKEN" https://v8sh48s.repositive.io:8200/v1/gcp/token/gcr | jq .data.token | tr -d '"')

            # Build the Container
            docker build -t app .

            # Useful for debugging image sizes
            docker images

            # TAG and Push to registry.repositive.io (AWS)
            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" registry.repositive.io:5000
            docker tag app "registry.repositive.io:5000/${REPO}:latest"
            docker tag app "registry.repositive.io:5000/${REPO}:${TAG}"
            docker push "registry.repositive.io:5000/${REPO}:latest"
            docker push "registry.repositive.io:5000/${REPO}:${TAG}"

            # Authenticate to docker
            docker login -u oauth2accesstoken -p $DOCKERAUTH https://gcr.io/repositive-gcr

            # TAG and Push to gcr.io/repositive-gcr (GCP)
            docker tag app "gcr.io/repositive-gcr/${REPO}:latest"
            docker tag app "gcr.io/repositive-gcr/${REPO}:${TAG}"
            docker push "gcr.io/repositive-gcr/${REPO}:latest"
            docker push "gcr.io/repositive-gcr/${REPO}:${TAG}"


  compute_tag:
    machine: true
    steps:
      - checkout
      - run: echo "$(git rev-parse --short HEAD)" > tag.txt
      - persist_to_workspace:
          root: .
          paths:
            - tag.txt

  create_release_tag:
    machine: true
    steps:
      - checkout
      - run:
          name: Create release tag
          command: |
            TAG=$(date +"%Y%m%d%H%M%S")
            SHA="$(git rev-parse HEAD)"
            curl -fsS -u "${GITHUB_USERNAME}":"${GITHUB_PASSWORD}" \
              -d '{"ref":"refs/tags/'"${TAG}_${CIRCLE_BRANCH}"'", "sha":"'"${SHA}"'"}' \
              -X POST "https://api.github.com/repos/repositive/${CIRCLE_PROJECT_REPONAME}/git/refs"

  release_cmp-rc:
    environment:
      - CLUSTER: 'cmp-dev'
      - CONFIG_PATH: '.circleci/k8s.cmp-rc.yml'
    <<: *deploy_image

  release_cmp-demo:
    environment:
      - CLUSTER: 'cmp-dev'
      - CONFIG_PATH: '.circleci/k8s.cmp-demo.yml'
    <<: *deploy_image

  release_cmp-prod:
    environment:
      - CLUSTER: 'cmp-prod'
      - CONFIG_PATH: '.circleci/k8s.cmp-prod.yml'
    <<: *deploy_image
