version: 2

workflows:
  version: 2
  test_and_release:
    jobs:
      - test_and_make:
          filters:
            branches:
              ignore:
                - production
      - build_container:
          filters:
            branches:
              only:
                - master
          requires:
            - test_and_make
      - release_pdx-dev:
          requires:
            - build_container
      - release_pdx-staging:
          requires:
            - build_container
      - compute_tag:
          filters:
            branches:
              only:
                - production
      - release_pdx-production:
          requires:
            - compute_tag
      - create_release_tag:
          requires:
            - release_pdx-production

deploy_image: &deploy_image
  docker:
    - image: reposibot/deployer:latest
  steps:
    - attach_workspace:
        at: .
    - run:
        name: release staging
        command: |
          TAG="$(cat tag.txt)"
          curl -sSO -u "${DEPLOYER_USERNAME}":"${DEPLOYER_PASSWORD}" \
            "https://deployer.repositive.io/scripts/deploy.sh"
          sh deploy.sh "$CIRCLE_PROJECT_REPONAME:$TAG" $CLUSTER $CONFIG_PATH

jobs:
  test_and_make:
    docker:
      - image: circleci/node:8.9
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: sudo npm install -g npm@latest
      - run: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: npm run make
      - run: npm run lint
      - run: npm run test
      - run: echo "$(git rev-parse --short HEAD)" > tag.txt
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - node_modules
            - tag.txt

  build_container:
    machine: true
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Push image to registry
          command: |
            REPO="${CIRCLE_PROJECT_REPONAME}"
            TAG="$(cat tag.txt)"

            docker build -t app .
            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" registry.repositive.io:5000
            docker tag app "registry.repositive.io:5000/${REPO}:latest"
            docker tag app "registry.repositive.io:5000/${REPO}:${TAG}"
            docker push "registry.repositive.io:5000/${REPO}:latest"
            docker push "registry.repositive.io:5000/${REPO}:${TAG}"

  compute_tag:
    machine: true
    steps:
      - checkout
      - run: echo "$(git rev-parse --short HEAD)" > tag.txt
      - persist_to_workspace:
          root: .
          paths:
            - tag.txt

  create_release_tag:
    machine: true
    steps:
      - checkout
      - run:
          name: Create release tag
          command: |
            TAG="$(date +%s)"
            SHA="$(git rev-parse HEAD)"
            curl -fsS -u "${GITHUB_USERNAME}":"${GITHUB_PASSWORD}" \
              -d '{"ref":"refs/tags/'"${TAG}"'", "sha":"'"${SHA}"'"}' \
              -X POST "https://api.github.com/repos/repositive/${CIRCLE_PROJECT_REPONAME}/git/refs"

  release_pdx-dev:
    environment:
      - CLUSTER: 'pdx-dev'
    <<: *deploy_image

  release_pdx-staging:
    environment:
      - CLUSTER: 'staging'
      - CONFIG_PATH: '.circleci/k8s.pdx-staging.yml'
    <<: *deploy_image

  release_pdx-production:
    environment:
      - CLUSTER: 'pdx-production'
    <<: *deploy_image
